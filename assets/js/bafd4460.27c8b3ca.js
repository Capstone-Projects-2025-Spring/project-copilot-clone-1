"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[6024],{39553:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>l,toc:()=>a});var i=s(74848),t=s(28453);const r={sidebar_position:4},o="Features and Requirements",l={id:"requirements/features-and-requirements",title:"Features and Requirements",description:"Functional Requirements",source:"@site/docs/requirements/features-and-requirements.md",sourceDirName:"requirements",slug:"/requirements/features-and-requirements",permalink:"/project-copilot-clone-1/docs/requirements/features-and-requirements",draft:!1,unlisted:!1,editUrl:"https://github.com/Capstone-Projects-2025-Spring/project-copilot-clone-1/edit/main/documentation/docs/requirements/features-and-requirements.md",tags:[],version:"current",lastUpdatedBy:"Sarker Mohammed",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"docsSidebar",previous:{title:"General Requirements",permalink:"/project-copilot-clone-1/docs/requirements/general-requirements"},next:{title:"Use-case descriptions",permalink:"/project-copilot-clone-1/docs/requirements/use-case-descriptions"}},c={},a=[{value:"Functional Requirements",id:"functional-requirements",level:2},{value:"Nonfunctional Requirements",id:"nonfunctional-requirements",level:2}];function u(e){const n={h1:"h1",h2:"h2",li:"li",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"features-and-requirements",children:"Features and Requirements"}),"\n",(0,i.jsx)(n.h2,{id:"functional-requirements",children:"Functional Requirements"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Users must download VS Code and install the EduCode plugin."}),"\n",(0,i.jsxs)(n.li,{children:["Users must authenticate their accounts to use the EduCode plugin.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Users will have the option to log in anonymously while still receiving suggestions."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"The plugin will provide code suggestions based on the code the user has already written."}),"\n",(0,i.jsx)(n.li,{children:"Suggestions will be generated in real-time based on the user\u2019s current code context."}),"\n",(0,i.jsx)(n.li,{children:"Users can accept or reject code suggestions, with the system logging these interactions."}),"\n",(0,i.jsxs)(n.li,{children:["The system must log user interactions, including:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Whether suggested code is accepted or rejected."}),"\n",(0,i.jsx)(n.li,{children:"Time taken for the user to accept a suggestion."}),"\n",(0,i.jsx)(n.li,{children:"A method for evaluating the accuracy of suggestions."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Users will have option to customize EduCode\u2019s behavior, including:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Modifying the frequency of code suggestions"}),"\n",(0,i.jsx)(n.li,{children:"Enabling/disabling specific features"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"The plugin will provide a dashboard for users to view their usage metrics and performance data."}),"\n",(0,i.jsx)(n.li,{children:"The system will analyze collected data to assess the impact of the plugin on user performance in their coding tasks."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"nonfunctional-requirements",children:"Nonfunctional Requirements"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"The plugin must securely access user data and maintain user privacy."}),"\n",(0,i.jsx)(n.li,{children:"The system should be able to handle high traffic without overwhelming the database."}),"\n",(0,i.jsx)(n.li,{children:"The plugin should be compatible with various versions of VS Code."}),"\n",(0,i.jsx)(n.li,{children:"The application must support at least 1000 concurrent users."}),"\n",(0,i.jsx)(n.li,{children:"The system should be designed to scale on demand, utilizing cloud services if necessary."}),"\n",(0,i.jsx)(n.li,{children:"The backend should use efficient logging mechanisms to store user interaction data without excessive database load."}),"\n",(0,i.jsx)(n.li,{children:"The system should prioritize helpful and relevant suggestions over generic or excessive code completions."}),"\n",(0,i.jsx)(n.li,{children:"Users should be encouraged to critically evaluate suggestions by providing feedback mechanisms or rewarding them for identifying incorrect or suboptimal suggestions."}),"\n",(0,i.jsx)(n.li,{children:"The user interface must be aesthetically pleasing and intuitive to enhance user experience."}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>l});var i=s(96540);const t={},r=i.createContext(t);function o(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);