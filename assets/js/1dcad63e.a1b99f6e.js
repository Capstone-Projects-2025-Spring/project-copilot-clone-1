"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[2994],{95156:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>t,metadata:()=>i,toc:()=>d});var s=r(74848),a=r(28453);const t={sidebar_position:3},o="Sequence Diagrams",i={id:"system-architecture/sequence-diagrams",title:"Sequence Diagrams",description:"Use Case 1",source:"@site/docs/system-architecture/sequence-diagrams.md",sourceDirName:"system-architecture",slug:"/system-architecture/sequence-diagrams",permalink:"/project-copilot-clone-1/docs/system-architecture/sequence-diagrams",draft:!1,unlisted:!1,editUrl:"https://github.com/Capstone-Projects-2025-Spring/project-copilot-clone-1/edit/main/documentation/docs/system-architecture/sequence-diagrams.md",tags:[],version:"current",lastUpdatedBy:"mihirp11",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"docsSidebar",previous:{title:"Class Diagrams",permalink:"/project-copilot-clone-1/docs/system-architecture/class-diagram"},next:{title:"Development Environment",permalink:"/project-copilot-clone-1/docs/system-architecture/development-environment"}},c={},d=[{value:"Use Case 1",id:"use-case-1",level:2},{value:"Use Case 2",id:"use-case-2",level:2},{value:"Use Case 3",id:"use-case-3",level:2},{value:"Use Case 4",id:"use-case-4",level:2},{value:"Use Case 5",id:"use-case-5",level:2},{value:"Use Case 6",id:"use-case-6",level:2},{value:"Use Case 7",id:"use-case-7",level:2},{value:"Use Case 8",id:"use-case-8",level:2},{value:"Use Case 9",id:"use-case-9",level:2},{value:"Use Case 10",id:"use-case-10",level:2}];function S(e){const n={h1:"h1",h2:"h2",mermaid:"mermaid",p:"p",strong:"strong",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"sequence-diagrams",children:"Sequence Diagrams"}),"\n",(0,s.jsx)(n.h2,{id:"use-case-1",children:"Use Case 1"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"User signs into EduCode for school as educator or student"})}),"\n",(0,s.jsx)(n.mermaid,{value:"sequenceDiagram \n  actor User\n  participant VSCode\n  participant Server\n  User->>VSCode: Download EduCode from VSCode Extensions\n  VSCode->>Server: Notify Server of New User\n  Server->>VSCode: Ask for Login Credentials\n  User->>VSCode: Create Account or Log in\n  VSCode->>Server: Records Account Information"}),"\n",(0,s.jsx)(n.h2,{id:"use-case-2",children:"Use Case 2"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Student uses EduCode to autocomplete written code"})}),"\n",(0,s.jsx)(n.mermaid,{value:"sequenceDiagram \n  actor User\n  participant VSCode\n  participant Server\n  participant AI Model\n  participant Database\n  User->>VSCode: Type a Snippet of Code\n  VSCode->>Server: Send User's Code\n  Server->>AI Model: Send User's Code\n  AI Model--\x3e>Server: Send Generated Code Suggestion \n  Server--\x3e>VSCode: Send Suggestion\n  User->>VSCode: Accept/Reject Suggestion\n  VSCode->>Server: Send Acceptance/Rejection\n  Server->>Database: Log Suggestion and Acceptance/Rejection"}),"\n",(0,s.jsx)(n.h2,{id:"use-case-3",children:"Use Case 3"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Student uses EduCode to ask AI to write a complete function for them"})}),"\n",(0,s.jsx)(n.mermaid,{value:"sequenceDiagram \n  actor User\n  participant VSCode\n  participant Server\n  participant AI Model\n  participant Database\n  User->>VSCode: Ask AI to write a function\n  VSCode->>Server: Send User's Request\n  Server->>AI Model: Send User's Request\n  AI Model--\x3e>Server: Send Generated Code Suggestion \n  Server--\x3e>VSCode: Send Suggestion\n  User->>VSCode: Accept/Reject Suggestion\n  VSCode->>Server: Send Acceptance/Rejection\n  Server->>Database: Log Suggestion and Acceptance/Rejection"}),"\n",(0,s.jsx)(n.h2,{id:"use-case-4",children:"Use Case 4"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Student uses EduCode to ask AI to explain a concept or code"})}),"\n",(0,s.jsx)(n.mermaid,{value:"sequenceDiagram \n  actor User\n  participant VSCode\n  participant Server\n  participant AI Model\n  User->>VSCode: Ask AI to explain a concept or code\n  VSCode->>Server: Send User's Request\n  Server->>AI Model: Send User's Request\n  AI Model--\x3e>Server: Send Generated Explaination\n  Server--\x3e>VSCode: Send Explaination"}),"\n",(0,s.jsx)(n.h2,{id:"use-case-5",children:"Use Case 5"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Student is provided an inaccurate suggestion"})}),"\n",(0,s.jsx)(n.mermaid,{value:"sequenceDiagram \n  actor User\n  participant VSCode\n  participant Server\n  participant AI Model\n  participant Database\n  User->>VSCode: Type a Snippet of Code\n  VSCode->>Server: Send User's Code\n  Server->>AI Model: Send User's Code, Requesting Incorrect Suggestion\n  AI Model--\x3e>Server: Send Incorrectly Generated Code Suggestion \n  Server--\x3e>VSCode: Send Incorrect Suggestion\n  User->>VSCode: Accept Incorrect Suggestion\n  VSCode->>Server: Record Acceptance\n  Server->>VSCode: Notify User of Incorrect Suggestion\n  Server->>Database: Log Suggestion and Acceptance"}),"\n",(0,s.jsx)(n.h2,{id:"use-case-6",children:"Use Case 6"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"System recognizes student is misusing AI assiantance and limits suggestions"})}),"\n",(0,s.jsx)(n.mermaid,{value:"sequenceDiagram \n  actor User\n  participant VSCode\n  participant Server\n  participant AI Model\n  participant Database\n  User->>VSCode: Type a Snippet of Code\n  VSCode->>Server: Send User's Code\n  Server->>AI Model: Send User's Code\n  AI Model--\x3e>Server: Send Incorrectly Generated Code Suggestion \n  Server--\x3e>VSCode: Send Incorrect Suggestion\n  User->>VSCode: Accept Incorrect Suggestion\n  VSCode->>Server: Record Acceptance\n  Server->>Server: Recognize Misuse of AI. Limits Future Suggestions\n  Server->>Database: Log Suggestion and Acceptance"}),"\n",(0,s.jsx)(n.h2,{id:"use-case-7",children:"Use Case 7"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Student is given a Mini-Quiz to unlock suggestions again"})}),"\n",(0,s.jsx)(n.mermaid,{value:"sequenceDiagram \n  actor User\n  participant VSCode\n  participant Server\n  participant AI Model\n  participant Database\n  User->>VSCode: Type a Snippet of Code\n  VSCode->>Server: Send User's Code\n  Server->>AI Model: Send User's Code\n  AI Model--\x3e>Server: Send Incorrectly Generated Code Suggestion \n  Server--\x3e>VSCode: Send Incorrect Suggestion\n  User->>VSCode: Accept Incorrect Suggestion\n  VSCode->>Server: Record Acceptance\n  Server->>Server: Recognize Misuse of AI. Stops all Future Suggestions\n  Server->>Database: Log Suggestion and Acceptance\n  User->>VSCode: Request Quiz\n  VSCode->>Server: Send Request\n  Server->>Database: Request Recently Incorrect Suggestions\n  Database--\x3e>Server: Retrieve Recently Incorrect Suggestions\n  Server->>AI Model: Request Quiz based on Recently Incorrect Suggestions\n  AI Model--\x3e>Server: Send Generated Quiz\n  Server--\x3e>VSCode: Send Quiz\n  User->>VSCode: Answers Quiz\n  VSCode->>Server: Record Results\n  Server->>Database: Log Quiz Results\n  Server->>Server: Unlock Suggestions if Quiz's Results are Correct"}),"\n",(0,s.jsx)(n.h2,{id:"use-case-8",children:"Use Case 8"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Educator views Metrics for single student"})}),"\n",(0,s.jsx)(n.mermaid,{value:"sequenceDiagram \n  actor User as Educator\n  participant VSCode\n  participant Dashboard\n  participant Server\n  participant Database\n  User->>VSCode: Open Dashboard\n  VSCode->>Dashboard: Open Dashboard\n  User->>Dashboard: Request Metric of a Single Student\n  Dashboard->>Server: Request Student's Metric\n  Server->>Database: Request Student's Data\n  Database--\x3e>Server: Retrive Student's Data\n  Server--\x3e>Dashboard: Display Student's Metric"}),"\n",(0,s.jsx)(n.h2,{id:"use-case-9",children:"Use Case 9"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Educator views Metrics for class for an assignment or time period"})}),"\n",(0,s.jsx)(n.mermaid,{value:"sequenceDiagram \n  actor User as Educator\n  participant VSCode\n  participant Dashboard\n  participant Server\n  participant Database\n  User->>VSCode: Open Dashboard\n  VSCode->>Dashboard: Open Dashboard\n  User->>Dashboard: Request Metric of Class for an assignment or time period\n  Dashboard->>Server: Request Class's Data\n  Server->>Database: Request Class's Data\n  Database--\x3e>Server: Retrive Class's Data\n  Server--\x3e>Dashboard: Display Class's Metric"}),"\n",(0,s.jsx)(n.h2,{id:"use-case-10",children:"Use Case 10"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Student views metrics for their own AI use"})}),"\n",(0,s.jsx)(n.mermaid,{value:"sequenceDiagram \n  actor User as Student\n  participant VSCode\n  participant Dashboard\n  participant Server\n  participant Database\n  User->>VSCode: Open Dashboard\n  VSCode->>Dashboard: Open Dashboard\n  User->>Dashboard: Request Personal Metrics\n  Dashboard->>Server: Request Personal Metrics\n  Server->>Database: Request Personal Data\n  Database--\x3e>Server: Retrive Personal Data\n  Server--\x3e>Dashboard: Display Personal Metrics"})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(S,{...e})}):S(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>i});var s=r(96540);const a={},t=s.createContext(a);function o(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);