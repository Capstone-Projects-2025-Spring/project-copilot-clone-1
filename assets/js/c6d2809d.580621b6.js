"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[3153],{23938:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>d});var t=n(74848),a=n(28453);const r={sidebar_position:2},i="Class Diagrams",o={id:"system-architecture/class-diagram",title:"Class Diagrams",description:"Front End Diagram",source:"@site/docs/system-architecture/class-diagram.md",sourceDirName:"system-architecture",slug:"/system-architecture/class-diagram",permalink:"/project-copilot-clone-1/docs/system-architecture/class-diagram",draft:!1,unlisted:!1,editUrl:"https://github.com/Capstone-Projects-2025-Spring/project-copilot-clone-1/edit/main/documentation/docs/system-architecture/class-diagram.md",tags:[],version:"current",lastUpdatedBy:"Vstroma",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"docsSidebar",previous:{title:"design",permalink:"/project-copilot-clone-1/docs/system-architecture/design"},next:{title:"Sequence Diagrams",permalink:"/project-copilot-clone-1/docs/system-architecture/sequence-diagrams"}},c={},d=[{value:"Front End Diagram",id:"front-end-diagram",level:2},{value:"Back End Diagram",id:"back-end-diagram",level:2},{value:"Server",id:"server",level:3},{value:"Database",id:"database",level:3},{value:"OpenAI",id:"openai",level:3}];function l(e){const s={h1:"h1",h2:"h2",h3:"h3",mermaid:"mermaid",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.h1,{id:"class-diagrams",children:"Class Diagrams"}),"\n",(0,t.jsx)(s.h2,{id:"front-end-diagram",children:"Front End Diagram"}),"\n",(0,t.jsx)(s.mermaid,{value:"\nclassDiagram\n    direction TB\n\n    class User {\n        +userID: String\n        +username: String\n        +preferences: JSON\n        +getCodeSuggestions()\n        +viewActivityLogs()\n    }\n\n    class VSCodeExtension {\n        +suggestCode(userID, userCode): String\n        +logActivity(userID, action): void\n        +fetchLogs(userID): JSON\n    }\n\n    class Database {\n        +storeUserCode(userID, code): void\n        +storeLogs(userID, action): void\n        +getLogs(userID): JSON\n        +getSuggestions(context): String\n    }\n\n    class Suggestions {\n        +suggestSnippet(context): String\n        +getBoilerplate(type): String\n    }\n\n    class Dashboard {\n        +displayActivity(userID): JSON\n        +showCodeSuggestions(userID): JSON\n    }\n\n    User --\x3e VSCodeExtension : Uses\n    VSCodeExtension --\x3e Database : Stores & Fetches Data\n    VSCodeExtension --\x3e Suggestions : Retrieves Snippets\n    VSCodeExtension --\x3e Dashboard : Sends Data\n    Database --\x3e Dashboard : Provides Logs & Code Data\n\n\n"}),"\n",(0,t.jsx)(s.h2,{id:"back-end-diagram",children:"Back End Diagram"}),"\n",(0,t.jsx)(s.h3,{id:"server",children:"Server"}),"\n",(0,t.jsx)(s.h3,{id:"database",children:"Database"}),"\n",(0,t.jsx)(s.h3,{id:"openai",children:"OpenAI"})]})}function u(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},28453:(e,s,n)=>{n.d(s,{R:()=>i,x:()=>o});var t=n(96540);const a={},r=t.createContext(a);function i(e){const s=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),t.createElement(r.Provider,{value:s},e.children)}}}]);