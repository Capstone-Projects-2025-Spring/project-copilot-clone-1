"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[8316],{38215:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>p,frontMatter:()=>s,metadata:()=>d,toc:()=>l});var i=t(74848),o=t(28453);const s={sidebar_position:3},r="EduCode Extension",d={id:"api-specification/EduCodeModel",title:"EduCode Extension",description:"+activate(context)",source:"@site/docs/api-specification/EduCodeModel.md",sourceDirName:"api-specification",slug:"/api-specification/EduCodeModel",permalink:"/project-copilot-clone-1/docs/api-specification/EduCodeModel",draft:!1,unlisted:!1,editUrl:"https://github.com/Capstone-Projects-2025-Spring/project-copilot-clone-1/edit/main/documentation/docs/api-specification/EduCodeModel.md",tags:[],version:"current",lastUpdatedBy:"khushiipatel",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"docsSidebar",previous:{title:"EduCode REST API",permalink:"/project-copilot-clone-1/docs/api-specification/openapi-spec"},next:{title:"Test Procedures",permalink:"/project-copilot-clone-1/docs/category/test-procedures"}},c={},l=[{value:"<code>+activate(context)</code>",id:"activatecontext",level:2},{value:"<code>+deactivate()</code>",id:"deactivate",level:2}];function a(e){const n={code:"code",h1:"h1",h2:"h2",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"educode-extension",children:"EduCode Extension"}),"\n",(0,i.jsx)(n.h2,{id:"activatecontext",children:(0,i.jsx)(n.code,{children:"+activate(context)"})}),"\n",(0,i.jsx)(n.p,{children:"Function that will run when the Educode Extension is first activated, and run the function to provide the suggestion and storage logic to VSCode."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Parameters:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"context"})," - vscode Extension Context"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Methods","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"createInlineSuggestionProvider():void"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Purpose: Create the suggestor class used internally in VSCode to provide code suggestions. Requests the server for code, and sends current document to the server to log."}),"\n",(0,i.jsx)(n.li,{children:"Pre-condition: User must have a text editor open"}),"\n",(0,i.jsx)(n.li,{children:"Returns: void"}),"\n",(0,i.jsx)(n.li,{children:"Errors Thrown: Nonexistent Text Editor, Server Connection Error"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"suggestSnippet(editor, snippet, insertPosition)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Purpose: With a snippet returned from the server, provide it to the user so they can either accept or reject it"}),"\n",(0,i.jsxs)(n.li,{children:["Pre-Condition:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Code snippet returned from Server"}),"\n",(0,i.jsx)(n.li,{children:"Text Editor Open"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"Post-Condition: Snippet Suggestion is created in VSCode"}),"\n",(0,i.jsxs)(n.li,{children:["Parameters:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"editor: A VSCode active text editor object"}),"\n",(0,i.jsx)(n.li,{children:"snippet: A string snippet returned from the server"}),"\n",(0,i.jsx)(n.li,{children:"insertPosition: an optional positioning for the snippet to be inserted at"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"Returns: void, renders a suggestion box in VSCode"}),"\n",(0,i.jsx)(n.li,{children:"Errors Thrown: Snippet Insertion Failure"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"deactivate",children:(0,i.jsx)(n.code,{children:"+deactivate()"})}),"\n",(0,i.jsx)(n.p,{children:"Function to dismount the extension"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Methods","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"removeInlineSuggestionProvider():void"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Purpose: Removes the Inline suggestion provider"}),"\n",(0,i.jsx)(n.li,{children:"Returns: void"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>d});var i=t(96540);const o={},s=i.createContext(o);function r(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);